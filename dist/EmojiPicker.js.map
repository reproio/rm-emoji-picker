{"version":3,"sources":["../src/js/EmojiPicker.js"],"names":["EmojiPicker","options","undefined","_callback","defaults","Object","assign","_setDefaults","categories","_getCategories","$picker","_getPicker","$active_title","find","$preview_emoji","$preview_name","$preview_colon","$content","$default_footer","$preview","$search","_icon","_container","_input","editor","_open","defineProperty","get","set","value","openPicker","detach","_active_cat","title","setActiveCategory","_emoji","full_name","_updatePreview","active_category","_onScroll","_onCatClick","_onSearch","_setCategoryTooltips","icon","container","input","_removeOldEvents","prevent_new_line","_onIconClick","tooltip","center","positioning","autoPlace","autoPlaceVertically","autoPlaceHorizontally","_onTooltipClick","event","scrollTop","offset_top","getText","Error","empty","console","log","picker","each","getAttribute","classList","add","text","remove","name","cat","category","emojis","emote","keys","forEach","hasOwnProperty","key","use_sheets","setSheets","sheets","action","emoji","events","SELECTED","_handleSelection","EMOJI_MOUSEENTER","active_emoji","EMOJI_MOUSELEAVE","node","placeEmoji","callback","picker_open","cats","map","factory","_dispatchBubble","bind","$category","addClass","default_content","default_footer_message","exportContents","search_icon","$contents","append","getMarkup","show_icon_tooltips","$cats","off","on","below","destroy","setClickCallback","target","$tooltip","closest","is_icon","is","length","_getActiveCategory","getCategory","search","val","trim","search_term","scroll_top","i","hide","html","getPreview","short_name","show_colon_preview","getColons","removeClass","show","str","converter","withEnvironment","is_mobile","replace_colons","replace_unified"],"mappings":"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","file":"EmojiPicker.js","sourcesContent":["import $ from \"jquery\";\nimport EmojiEditor from \"./EmojiEditor\";\nimport EmojiCategory from \"./EmojiCategory\";\nimport Converters from \"./Converters\";\nimport Tooltip from \"rm-tooltip\";\nimport emojis from \"./data\";\nimport defaults from \"./defaults\";\nimport picker from \"./../views/picker.mustache\";\nimport icon_tooltip from \"./../views/icon_tooltip.mustache\";\nimport \"./polyfills\";\n\n\"use strict\";\n\nexport default class EmojiPicker {\n\n    /**\n     *\n     * @param {undefined|Object} options\n     */\n    constructor(options = undefined){\n\n        this._callback = undefined;\n\n        /**\n         * A copy of the defaults object so that state is not\n         * mutated with new instances.\n         *\n         * @type {*}\n         */\n        this.defaults   = Object.assign({}, defaults);\n\n        if(typeof options === \"object\"){\n            this._setDefaults(options);\n        }\n\n        if(typeof options === \"function\"){\n            this._callback = options;\n        }\n\n\n        /**\n         *\n         * @type {Array.<EmojiCategory>}\n         */\n        this.categories = this._getCategories();\n\n        /**\n         * @type {jQuery}\n         */\n        this.$picker    = this._getPicker();\n\n        /**\n         * @type {jQuery}\n         */\n        this.$active_title = this.$picker.find('#active-title');\n\n        /**\n         * @type {jQuery}\n         */\n        this.$preview_emoji = this.$picker.find('#emoji-large-preview');\n\n        /**\n         * @type {jQuery}\n         */\n        this.$preview_name  = this.$picker.find('#emoji-name');\n\n        /**\n         * @type {jQuery}\n         */\n        this.$preview_colon = this.$picker.find('#colon-display');\n\n        /**\n         * @type {jQuery}\n         */\n        this.$content      = this.$picker.find('.emoji-content');\n\n        /**\n         * @type {jQuery}\n         */\n        this.$default_footer = this.$picker.find('.default-content');\n\n        /**\n         * @type {jQuery}\n         */\n        this.$preview        = this.$picker.find('.emoji-preview');\n\n        /**\n         * @type {jQuery}\n         */\n        this.$search         = this.$picker.find('.search-emojis');\n\n        /**\n         *\n         * @type {HTMLElement|undefined}\n         * @private\n         */\n        this._icon      = undefined;\n\n        /**\n         *\n         * @type {HTMLElement|undefined}\n         * @private\n         */\n        this._container = undefined;\n\n        /**\n         *\n         * @type {HTMLInputElement|HTMLTextAreaElement|HTMLElement|undefined}\n         * @private\n         */\n        this._input     = undefined;\n\n        /**\n         * Keeps track of placing the emoji in the input, getting\n         * the contents of the editor\n         *\n         * @type {EmojiEditor|undefined}\n         */\n        this.editor    = undefined;\n\n\n        let _open = false;\n        Object.defineProperty(this, 'picker_open', {\n            get : () => _open,\n            set : value => {\n                if(value !== _open){\n                    _open = value;\n                    if(_open){\n                        this.openPicker();\n                    }\n                    else{\n                        this.$picker.detach();\n                    }\n                }\n            }\n        });\n\n        let _active_cat;\n        Object.defineProperty(this, 'active_category', {\n            get : () => _active_cat,\n            set : value => {\n                if(!_active_cat || (value instanceof EmojiCategory && value.title !== _active_cat.title)){\n                    _active_cat = value;\n                    this.setActiveCategory();\n                }\n            }\n        });\n\n        let _emoji;\n        Object.defineProperty(this, 'active_emoji', {\n           get : () => _emoji,\n            set : value => {\n               if(!_emoji || !value || (value.full_name !== _emoji.full_name)){\n                   _emoji = value;\n                   this._updatePreview();\n               }\n            }\n        });\n\n\n        this.active_category = this.categories[0];\n\n        this._onScroll()\n            ._onCatClick()\n            ._onSearch()\n            ._setCategoryTooltips();\n    }\n\n    /**\n     * Renders html or text containing emojis\n     *\n     * @param str\n     * @returns {string}\n     */\n    static render(str) {\n\n        const converter = Converters.withEnvironment();\n        //If the code is running on a mobile device, don't run replace_unified\n        if(Converters.is_mobile){\n            return converter.replace_colons(str);\n        }\n        //Otherwise, make an attempt to replace both colons and unified code.\n        return converter.replace_unified(\n               converter.replace_colons(\n                    str\n                )\n            );\n    }\n\n    /**\n     *\n     * @param {object} sheets\n     */\n    static setSheets (sheets = undefined){\n        sheets          = sheets || defaults.sheets;\n        Converters.setSheets(sheets);\n    }\n\n    /**\n     *\n     * @param {HTMLElement} icon\n     * @param {HTMLElement} container\n     * @param {HTMLTextAreaElement|HTMLElement} input\n     */\n    listenOn(icon, container, input){\n        this._removeOldEvents();\n        this._icon                = icon;\n        this._container           = container;\n        this._input               = input;\n        this.editor               = new EmojiEditor(input, this.defaults.prevent_new_line);\n\n        this._onIconClick();\n    }\n\n    /**\n     * Appends the emoji picker to the DOM\n     *\n     * @returns {EmojiPicker}\n     */\n    openPicker() {\n\n        const tooltip = new Tooltip(this._icon, this._container, this.$picker);\n        tooltip.center();\n        //If the developer supplied a function to position the tooltip\n        if(typeof this.defaults.positioning === \"function\"){\n            this.defaults.positioning(tooltip);\n        }\n        else {\n\n            switch (this.defaults.positioning) {\n                case \"autoplace\":\n                    tooltip.autoPlace(43, 10);\n                    break;\n                case \"vertical\":\n                    tooltip.autoPlaceVertically(10);\n                    break;\n                case \"horizontal\":\n                    tooltip.autoPlaceHorizontally(10);\n                    break;\n                default:\n                    tooltip.autoPlace(43, 10);\n                    break;\n            }\n        }\n\n        this._onTooltipClick(tooltip, event);\n        this.$content.get(0).scrollTop = this.active_category.offset_top;\n\n        return this;\n    }\n\n    /**\n     * Getter for the input's text.\n     *\n     * @returns {*}\n     */\n    getText () {\n        if(this.editor){\n            return this.editor.getText();\n        }\n\n        throw new Error(\"Did you call this listenOn method first? The listenOn method constructs an instance of EmojiEditor and it appears to be undefined.\");\n    }\n\n    /**\n     * Empties out the input from the editor.\n     */\n    emptyInput () {\n        if(this.editor){\n            this.editor.empty();\n        }\n        else{\n            console.log(\"Did you call the listenOn method first? The EmojiEditor instance is undefined.\");\n        }\n    }\n\n    /**\n     * Updates the dom based on the category that became active.\n     *\n     * @returns {EmojiPicker}\n     */\n    setActiveCategory () {\n\n        const picker = this;\n        this.$picker.find('.select-category').each(/**@this {HTMLElement}*/function(){\n            const title = this.getAttribute('data-name');\n            if(title === picker.active_category.title){\n                this.classList.add('active');\n                picker.$active_title.text(picker.active_category.title);\n            }\n            else{\n                this.classList.remove('active');\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Find an emoji category by name.\n     *\n     * @param name\n     * @returns {EmojiCategory}\n     */\n    getCategory(name){\n        return this.categories.find(cat => cat.title === name);\n    }\n\n    /**\n     * Finds an individual emoji by name. If the category is known\n     * it can be supplied as the second argument to speed up the search.\n     *\n     * @param {String} name\n     * @param {EmojiCategory} category\n     * @returns {*}\n     */\n    getEmoji(name, category = undefined){\n        if(category){\n            return category.emojis.find(emote => emote.full_name === name);\n        }\n\n        return this.categories.find(cat =>\n            cat.emojis.find(emote => emote.full_name === name)\n        );\n    }\n\n    /**\n     * Sets default options based on developer-supplied parameters\n     *\n     * @param options\n     * @private\n     */\n    _setDefaults(options){\n        const keys = Object.keys(options);\n        keys.forEach(key => {\n            if(this.defaults.hasOwnProperty(key)){\n                this.defaults[key] = options[key];\n            }\n        });\n\n        if(this.defaults.use_sheets){\n            Converters.setSheets(this.defaults.sheets);\n        }\n    }\n\n    /**\n     * Events from EmojiCategory or Emoji bubble up through a callback\n     *\n     * @param action\n     * @param emoji\n     * @param category\n     * @private\n     */\n    _dispatchBubble(action, emoji, category){\n\n        const events = defaults.events;\n        switch(action){\n            case events.SELECTED:\n                this._handleSelection(emoji, category);\n                break;\n            case events.EMOJI_MOUSEENTER:\n                this.active_emoji = emoji;\n                break;\n            case events.EMOJI_MOUSELEAVE:\n                this.active_emoji = undefined;\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * When an emoji gets clicked on the selection bubbles up\n     * to the EmojiPicker object. First, we place the emoji in\n     * the input and then fire off any callback that were supplied.\n     *\n     *\n     * @param {Emoji} emoji\n     * @param {EmojiCategory} category\n     * @private\n     */\n    _handleSelection(emoji, category){\n\n        const node = this.editor.placeEmoji(emoji);\n\n        if(typeof this._callback === \"function\"){\n            this._callback(emoji, category, node);\n        }\n\n        if(typeof this.defaults.callback === \"function\"){\n            this.defaults.callback(emoji, category, node);\n        }\n\n        //Close the picker\n        this.picker_open  = false;\n        this.active_emoji = undefined;\n    }\n\n    /**\n     *\n     * @returns {Array<EmojiCategory>}\n     * @private\n     */\n    _getCategories() {\n        const cats = this.defaults\n                         .categories\n                         .map(cat => EmojiCategory.factory(cat, emojis[cat.title], this._dispatchBubble.bind(this)));\n\n        cats[0].$category.addClass('first');\n        return cats;\n    }\n\n    /**\n     * Retrieves the emoji picker\n     *\n     * @returns {jQuery|HTMLElement}\n     * @private\n     */\n    _getPicker() {\n        const $picker = $(picker({\n            default_content: defaults.default_footer_message,\n            categories     : this.categories.map(cat => cat.exportContents()),\n            search_icon    : this.defaults.search_icon\n        }));\n\n        const $contents = $picker.find('.emoji-content');\n\n        this.categories.forEach(cat => {\n            $contents.append(cat.getMarkup());\n        });\n\n        return $picker;\n    }\n\n    /**\n     * Sets a helper tooltip on each category's icon\n     *\n     * @returns {EmojiPicker}\n     * @private\n     */\n    _setCategoryTooltips(){\n        //Only proceed if the picker has been initialized and the developer opted to show tooltips\n        if(this.$picker && this.defaults.show_icon_tooltips){\n            //cache an array of category icon wrappers\n            const $cats  = this.$picker.find('.select-category');\n            //Set up a reference to the class instance\n            const picker = this;\n            let tooltip;\n            $cats.off('mouseenter.emoji').on('mouseenter.emoji', /**@this {HTMLElement}*/function(event){\n                //On mouseenter, get the name of the category, then create the tooltip\n                const title = this.getAttribute('data-name');\n                tooltip     = new Tooltip(this, picker.$picker.get(0), $(icon_tooltip({\n                    text: title\n                })));\n\n                tooltip.below();\n            }).off('mouseleave.emoji').on('mouseleave.emoji', () => {\n                tooltip.destroy();\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * Removes any old click handlers on the icon.\n     *\n     * @returns {EmojiPicker}\n     * @private\n     */\n    _removeOldEvents (){\n        if(this._icon){\n            $(this._icon).off('click.emoji-picker');\n        }\n\n        return this;\n    }\n\n    /**\n     * Toggle the visibility of the picker when the icon\n     * gets clicked.\n     *\n     * @returns {EmojiPicker}\n     * @private\n     */\n    _onIconClick() {\n\n        $(this._icon).off('click.emoji').on('click.emoji', event => {\n            this.picker_open = !this.picker_open;\n        });\n\n        return this;\n    }\n\n    /**\n     *\n     * @param {Tooltip} tooltip\n     * @param {Event} event\n     * @private\n     */\n    _onTooltipClick(tooltip, event){\n        tooltip.setClickCallback(event, (target, $tooltip) => {\n            const $picker = $(target).closest('#emoji-picker');\n            const is_icon = $(target).is(this._icon);\n\n            //If the click occurred outside of the tooltip\n            if(!$picker.length && !is_icon){\n                this.picker_open = false;\n            }\n        });\n    }\n\n    /**\n     *\n     * @returns {EmojiPicker}\n     * @private\n     */\n    _onScroll(){\n        this.$content.off('scroll.emoji').on('scroll.emoji', event => {\n            this.active_category = this._getActiveCategory();\n        });\n\n        return this;\n    }\n\n    _onCatClick() {\n\n        const picker = this;\n        this.$picker.find('.select-category').off('click.emoji').on('click.emoji', /**@this {HTMLElement}*/function(){\n            const cat                        = picker.getCategory(this.getAttribute('data-name'));\n            picker.$content.get(0).scrollTop = cat.offset_top;\n            picker.active_category           = picker._getActiveCategory();\n        });\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns {EmojiPicker}\n     * @private\n     */\n    _onSearch() {\n        this.$search.off('input.emoji').on('input.emoji', () => {\n            const search = this.$search.val().trim();\n            this.categories.forEach(cat => cat.search_term = search);\n            this.$active_title.text(`Results for: ${search}`);\n            if(search.length === 0){\n                this.active_category = this._getActiveCategory();\n                //Manually call this in case the category hadn't changed since the search started\n                this.setActiveCategory();\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Gets the active category based on scroll position\n     *\n     * @returns {EmojiCategory}\n     * @private\n     */\n    _getActiveCategory() {\n\n        const scroll_top = this.$content.get(0).scrollTop;\n        let cat          = this.categories[0];\n\n        for(let i = 0; i < this.categories.length; i++){\n            if(this.categories[i].offset_top > scroll_top){\n                return cat;\n            }\n            cat = this.categories[i];\n        }\n\n        return this.categories[this.categories.length - 1];\n    }\n\n    /**\n     * Updates the preview section with either the default content\n     * or\n     *\n     * @private\n     */\n    _updatePreview() {\n\n        const emoji = this.active_emoji;\n        if (emoji) {\n            this.$default_footer.hide();\n            this.$preview_emoji.html(emoji.getPreview());\n            this.$preview_name.text(emoji.short_name);\n            if (this.defaults.show_colon_preview) {\n                this.$preview_colon.text(emoji.getColons());\n                this.$preview_name.removeClass('name-only');\n            }\n            else {\n                this.$preview_name.addClass('name-only');\n            }\n            this.$preview.show();\n        }\n        else {\n            this.$preview.hide();\n            this.$default_footer.show();\n        }\n    }\n}"]}